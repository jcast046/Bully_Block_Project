name: Full Stack CI

on:
  push:
    branches:
      - main
      - Jacob
  pull_request:
    branches:
      - main
      - Jacob

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v2

      # Setup Node.js
      - name: Setup Node.js for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: "20" # Specify Node.js version

      # Install Frontend Dependencies
      - name: Install Frontend dependencies
        working-directory: ./bullyblock-dashboard
        run: npm install

      #Verify react-router installation
      - name: Verify react-router installation
        working-directory: ./bullyblock-dashboard
        run: npm list react-router

      # Run Frontend tests
      - name: Run Frontend tests
        working-directory: ./bullyblock-dashboard
        run: npm test

      # Install Backend Dependencies
      - name: Install Backend Dependencies
        working-directory: ./Backend
        run: npm install

      # Run Backend Tests
      - name: Run Backend Tests
        working-directory: ./Backend
        run: npm test

      # Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.11" # Specify Python version

      # Install Python dependencies and run tests
      - name: Install Python dependencies
        run: echo "Remove comment and echo after we have requirements.txt" #pip install -r requirements.txt [ Uncomment this line once we have tests ]
      - name: Run Pytest
        run: echo "Remove comment and echo after we have requirements.txt" #pytest [ Uncomment this line once we have tests ]

      # Setup Java (if required for backend or other services)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11" # Specify JDK version
          distribution: "adopt"

      # Build and test Java components
      - name: Build and test with Maven
        run: echo "We need to either manually create a pom.xml file or first initialize the project as a Maven project" #mvn -B package --file pom.xml

      # MongoDB interaction check or data migrations
      - name: MongoDB operations
        run: echo "Perform MongoDB operations here"

      # Setup and update API documentation with Swagger
      - name: Generate Swagger API docs
        working-directory: ./Backend
        run: echo "Do not run until Swagger is set up properly in the Backend" #npm run generate-docs


    # Additional deployment or further steps can be added here
