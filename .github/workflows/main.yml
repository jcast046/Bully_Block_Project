name: Full Stack CI

on:
  push:
    branches:
      - main
      - Jacob
  pull_request:
    branches:
      - main
      - Jacob

env:
  NODE_VERSION: '20'
  PYTHON_VERSION: '3.11'
  JAVA_VERSION: '11'
  MONGODB_PORT: 27017

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      # Setup Node.js with caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            bullyblock-dashboard/package-lock.json
            Backend/package-lock.json

      # Frontend
      - name: Install Frontend dependencies
        working-directory: ./bullyblock-dashboard
        run: npm ci

      - name: Verify react-router installation
        working-directory: ./bullyblock-dashboard
        run: npm list react-router

      - name: Run Frontend tests
        working-directory: ./bullyblock-dashboard
        run: npm test
        env:
          CI: true

      # Backend
      - name: Install Backend dependencies
        working-directory: ./Backend
        run: npm ci

      - name: Run Backend tests
        working-directory: ./Backend
        run: npm test
        env:
          MONGODB_URI: mongodb://localhost:${{ env.MONGODB_PORT }}/test
          CI: true

      # Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
          cache-dependency-path: '**/requirements.txt'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi

      - name: Run Python tests
        run: |
          if [ -f requirements.txt ]; then
            pytest
          fi

      # Java
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}
          cache: 'maven'

      - name: Build and test with Maven
        run: |
          if [ -f pom.xml ]; then
            mvn -B verify
          fi

      # MongoDB health check
      - name: Check MongoDB connection
        run: |
          mongosh --eval "db.runCommand({ ping: 1 })" || exit 1

      # API Documentation
      - name: Generate API documentation
        working-directory: ./Backend
        run: |
          if [ -f package.json ] && grep -q "generate-docs" package.json; then
            npm run generate-docs
          fi
        continue-on-error: true

 
